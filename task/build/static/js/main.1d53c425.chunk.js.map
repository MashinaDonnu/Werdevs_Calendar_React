{"version":3,"sources":["images/Logo original RGB.jpg","components/Navbar/Navbar.js","hoc/Layout/Layout.js","components/Popup/Popup.js","components/Calendar/Calendar.js","store/actionCreataors.js","store/actionTypes.js","pages/Home/Home.js","pages/About/About.js","routes.js","App.js","serviceWorker.js","store/reducers/calendarReducer.js","store/rootReducer.js","index.js"],"names":["module","exports","Navbar","menu","useRef","className","to","src","logo","alt","onClick","event","target","classList","contains","parentNode","toggle","current","ref","exact","Layout","children","Popup","month","day","closePopup","data-close","htmlFor","defaultValue","type","id","Calendar","drawCalendarDays","idx","props","calendar","prevDays","days","nextDays","map","weekDays","original","next","nextMonth","prev","prevMonth","showPopup","dataset","textContent","hidePopup","close","this","popupVisible","monthName","year","index","key","data-day","data-month","el","name","Component","connect","state","calendarReducer","dispatch","data","payload","Home","About","routes","path","component","App","Boolean","window","location","hostname","match","padNum","num","toString","padStart","months","date","Date","setDate","lastDay","getFullYear","getMonth","getDate","prevDay","firstDayIndex","getDay","i","push","getPrevDays","Array","fill","_","dayEl","getDays","lastDays","getNextDays","initialState","rootReducer","combineReducers","action","setMonth","store","createStore","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1d53c425.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo original RGB.c1b22935.jpg\";","import React,{useRef} from 'react'\r\nimport './Navbar.scss'\r\nimport logo from '../../images/Logo original RGB.jpg'\r\nimport {NavLink} from \"react-router-dom\";\r\nexport const Navbar = () => {\r\n        const menu = useRef(null)\r\n        return(\r\n            <nav className=\"navbar\">\r\n                <div className=\"container\">\r\n\r\n                    <div className=\"navbar-brand\">\r\n                        <NavLink to=\"/\">\r\n                            <img src={logo} className=\"logo\" alt=\"logo\"/>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className=\"burger-menu\" onClick={event => {\r\n                        if (event.target.classList.contains('burger-menu-middle-line')) {\r\n                            event.target.parentNode.classList.toggle('open')\r\n                        } else {\r\n                            event.target.classList.toggle('open')\r\n                        }\r\n                        menu.current.classList.toggle('open')\r\n                    }}>\r\n                        <span className=\"burger-menu-middle-line\" />\r\n                    </div>\r\n                    <menu className=\"nav-menu\" ref={menu}>\r\n                        <li><NavLink to=\"/\" exact>Home</NavLink></li>\r\n                        <li><NavLink to=\"/about\">About us</NavLink></li>\r\n                    </menu>\r\n                </div>\r\n            </nav>\r\n        );\r\n}\r\n","import React from 'react'\r\nimport './Layout.scss'\r\n\r\nexport const Layout = ({children}) => {\r\n\r\n    return (\r\n        <main className=\"layout\">{children}</main>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './Popup.scss'\r\n\r\nexport const Popup = ({month, day, closePopup}) => {\r\n\r\n        return (\r\n            <div className=\"popup-wrapper\" data-close={true} onClick={event => closePopup(event)}>\r\n                <div className=\"popup\">\r\n                    <div className=\"popup-header\">\r\n                        <span className=\"material-icons close\" onClick={event => closePopup(event)} data-close={true}>close</span>\r\n                    </div>\r\n                    <div className=\"popup-content\">\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"popup-month\">Month</label>\r\n                            <input defaultValue={month} type=\"text\" id=\"popup-month\"/>\r\n                        </div>\r\n\r\n                        <div className=\"input-group\">\r\n                            <label htmlFor=\"popup-day\">Day</label>\r\n                            <input defaultValue={day} type=\"text\" id=\"popup-day\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n}\r\n","import React, {Component} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport './Calendar.scss'\r\nimport {hidePopup, nextMonth, prevMonth, showPopup} from \"../../store/actionCreataors\";\r\nimport {Popup} from \"../Popup/Popup\";\r\n\r\nclass Calendar extends Component{\r\n\r\n    drawCalendarDays = () => {\r\n        let idx = 0\r\n        const allDays = [\r\n            ...this.props.calendar.prevDays,\r\n            ...this.props.calendar.days,\r\n            ...this.props.calendar.nextDays\r\n        ].map(day => {\r\n            if (idx > 6) {\r\n                idx = 0\r\n            }\r\n            day.day = this.props.calendar.weekDays[idx].original\r\n            idx++\r\n            return day\r\n        })\r\n\r\n        return allDays\r\n    }\r\n\r\n    next = () => {\r\n        this.props.nextMonth()\r\n    }\r\n\r\n    prev = () => {\r\n        this.props.prevMonth()\r\n    }\r\n\r\n    showPopup = event => {\r\n        const month = event.target.dataset.month\r\n        const day = `${event.target.textContent}th ${event.target.dataset.day}`\r\n        this.props.showPopup({month, day})\r\n    }\r\n    hidePopup = event => {\r\n        if (event.target.dataset.close) {\r\n            this.props.hidePopup()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.drawCalendarDays()\r\n        const {calendar} = this.props\r\n\r\n        return (\r\n            <div className=\"calendar-wrapper\">\r\n                {calendar.popupVisible ? <Popup month={calendar.month} day={calendar.day} closePopup={this.hidePopup} /> : null}\r\n                <div className=\"calendar\">\r\n                    <div className=\"month\">\r\n                        <span className=\"material-icons prev\" onClick={this.prev}>arrow_back_ios</span>\r\n                        <div className=\"month-text\">\r\n                            {calendar.monthName} {calendar.year}\r\n                        </div>\r\n                        <span className=\"material-icons next\" onClick={this.next}>arrow_forward_ios</span>\r\n                    </div>\r\n                    <div className=\"days\">\r\n                        {this.drawCalendarDays().map((day, index) => {\r\n                            return <div\r\n                                        key={index}\r\n                                        data-day={day.day}\r\n                                        data-month={day.month}\r\n                                        className={day.className}\r\n                                        onClick={event => this.showPopup(event)}\r\n                                    >\r\n                                        {day.el}\r\n                                   </div>\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"week-days\">\r\n                        <div className=\"week-days-wrapper\">\r\n                            {calendar.weekDays.map((day, index) => {\r\n                                return <div key={index}>{day.name}</div>\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        calendar: state.calendarReducer\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        nextMonth: () => dispatch(nextMonth()),\r\n        prevMonth: () => dispatch(prevMonth()),\r\n\r\n        showPopup: data => dispatch(showPopup(data)),\r\n        hidePopup: () => dispatch(hidePopup()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Calendar)","import {HIDE_POPUP, NEXT_MONTH, PREV_MONTH, SHOW_POPUP} from \"./actionTypes\";\r\n\r\nexport const nextMonth = () => {\r\n    return {\r\n        type: NEXT_MONTH\r\n    }\r\n}\r\n\r\nexport const prevMonth = () => {\r\n    return {\r\n        type: PREV_MONTH\r\n    }\r\n}\r\n\r\nexport const showPopup = payload => {\r\n    return {\r\n        type: SHOW_POPUP,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const hidePopup = () => {\r\n    return {\r\n        type: HIDE_POPUP\r\n    }\r\n}","export const NEXT_MONTH = 'NEXT_MONTH'\r\nexport const PREV_MONTH = 'PREV_MONTH'\r\n\r\nexport const SHOW_POPUP = 'SHOW_POPUP'\r\nexport const HIDE_POPUP = 'HIDE_POPUP'","import React,{Component} from 'react'\r\nimport './Home.scss'\r\nimport Calendar from \"../../components/Calendar/Calendar\";\r\n\r\nexport default class Home extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"home\">\r\n                <div className=\"bg-image\">\r\n                        <div className=\"header-text\">\r\n                            <h1>Choose the day for the meeting</h1>\r\n                            <p>We encourage you to book your appointment online.</p>\r\n                            <p>This will save you time.</p>\r\n                        </div>\r\n                </div>\r\n                <Calendar/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React,{Component} from 'react'\r\nimport './About.scss'\r\n\r\nexport default class About extends Component {\r\n\r\n    render(){\r\n        return(\r\n            <section className=\"about\">\r\n                <div className=\"container\">\r\n                    <h1>Lorem ipsum creation timelines</h1>\r\n                    <p>\r\n                        So how did the classical Latin become so incoherent? According to McClintock, a 15th century typesetter likely scrambled part of Cicero's De Finibus in order to provide placeholder text to mockup various fonts for a type specimen book.</p>\r\n                    <p>It's difficult to find examples of lorem ipsum in use before Letraset made it popular as a dummy text in the 1960s, although McClintock says he remembers coming across the lorem ipsum passage in a book of old metal type samples. So far he hasn't relocated where he once saw the passage, but the popularity of Cicero in the 15th century supports the theory that the filler text has been used for centuries. </p>\r\n                    <p> And anyways, as Cecil Adams reasoned, “[Do you really] think graphic arts supply houses were hiring classics scholars in the 1960s?” Perhaps. But it seems reasonable to imagine that there was a version in use far before the age of Letraset.</p>\r\n                    <p>McClintock wrote to Before & After to explain his discovery; “What I find remarkable is that this text has been the industry's standard dummy text ever since some printer in the 1500s took a galley of type and scrambled it to make a type specimen book; it has survived not only four centuries of letter-by-letter\r\n                        resetting but even the leap into electronic typesetting, essentially unchanged except for an occasional 'ing' or 'y' thrown in. It's ironic that when the then-understood Latin was scrambled, it became as incomprehensible as Greek; the phrase 'it's Greek to me' and 'greeking' have common semantic roots!” (The editors published his letter in a correction headlined “Lorem Oopsum”).</p>\r\n                </div>\r\n\r\n            </section>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport {Redirect, Route, Switch} from \"react-router-dom\"\r\nimport Home from \"./pages/Home/Home\"\r\nimport About from \"./pages/About/About\"\r\n\r\nexport const routes = (\r\n    <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <About path=\"/about\" component={About} />\r\n        <Redirect to=\"/\" />\r\n    </Switch>\r\n)","import React, {Component} from 'react';\nimport {BrowserRouter} from 'react-router-dom'\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Layout} from \"./hoc/Layout/Layout\";\nimport {routes} from \"./routes\";\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n            <Navbar />\n            <Layout>\n                {routes}\n            </Layout>\n        </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {HIDE_POPUP, NEXT_MONTH, PREV_MONTH, SHOW_POPUP} from \"../actionTypes\";\r\n\r\nfunction padNum(num = 0) {\r\n    return num.toString().padStart(2, 0);\r\n}\r\n\r\nconst months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\r\nconst weekDays = [\r\n    {name:'S', original: 'Sunday'},\r\n    {name:'M', original: 'Monday'},\r\n    {name:'T', original: 'Tuesday'},\r\n    {name:'W', original: 'Wednesday'},\r\n    {name:'T', original: 'Thursday'},\r\n    {name:'F', original: 'Friday'},\r\n    {name:'S', original: 'Saturday'},\r\n]\r\n\r\nconst date = new Date()\r\ndate.setDate(1)\r\nconst calendar = () => {\r\n    const lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate()\r\n    date.setDate(1)\r\n    const prevDay = new Date(date.getFullYear(), date.getMonth(), 0).getDate()\r\n\r\n    const firstDayIndex = date.getDay()\r\n    const lastDayIndex = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDay()\r\n    const nextDays = 7 - lastDayIndex - 1\r\n\r\n    const getPrevDays = () => {\r\n        let idx = 0\r\n        const prevDays = []\r\n        for (let i = firstDayIndex; i > 0; i--) {\r\n            if (idx > 6) {\r\n                idx = 0\r\n            }\r\n            prevDays.push({\r\n                el: padNum(prevDay - i + 1),\r\n                className: 'prev-date',\r\n                month: months[date.getMonth() - 1]\r\n            })\r\n            idx++\r\n        }\r\n       return prevDays\r\n    }\r\n\r\n    const getDays = () => {\r\n        let idx = 0\r\n        return new Array(lastDay)\r\n            .fill(null)\r\n            .map((_, index) => {\r\n                if (idx > 6) {\r\n                    idx = 0\r\n                }\r\n                let dayEl = {\r\n                    el:padNum(index + 1),\r\n                    day: weekDays[idx],\r\n                    className: '',\r\n                    month: months[date.getMonth()]\r\n                }\r\n                if (index + 1 === new Date().getDate() && date.getMonth() === new Date().getMonth()) {\r\n                    dayEl.className = 'today'\r\n                }\r\n                idx++\r\n                return dayEl\r\n            })\r\n    }\r\n\r\n    const getNextDays = () => {\r\n        let idx = 0\r\n        const lastDays = []\r\n        for (let i = 0; i <= nextDays; i++) {\r\n            if (idx > 6) {\r\n                idx = 0\r\n            }\r\n            lastDays.push({\r\n                el: padNum(i + 1),\r\n                className: 'next-date',\r\n                month: months[date.getMonth() + 1]\r\n            })\r\n        }\r\n        return lastDays\r\n    }\r\n\r\n    return {prevDays: getPrevDays(), days: getDays(), nextDays: getNextDays()}\r\n}\r\n\r\n\r\nconst initialState = {\r\n    monthName: months[date.getMonth()],\r\n    year: date.getFullYear(),\r\n    prevDays: calendar().prevDays,\r\n    days: calendar().days,\r\n    nextDays: calendar().nextDays,\r\n    weekDays,\r\n\r\n    popupVisible: false,\r\n    month: '',\r\n    day: ''\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PREV_MONTH: {\r\n            date.setMonth(date.getMonth() - 1)\r\n            const data = calendar()\r\n            return {\r\n                ...state,\r\n                ...data,\r\n                monthName: months[date.getMonth()],\r\n            }\r\n        }\r\n        case NEXT_MONTH: {\r\n            date.setMonth(date.getMonth() + 1)\r\n            const data = calendar()\r\n            return {\r\n                ...state,\r\n                ...data,\r\n                monthName: months[date.getMonth()],\r\n            }\r\n        }\r\n        case SHOW_POPUP:\r\n            return {...state, popupVisible: true, ...action.payload}\r\n        case HIDE_POPUP:\r\n            return {...state, popupVisible: false, day: '', month: ''}\r\n        default: return state\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport {calendarReducer} from \"./reducers/calendarReducer\";\r\nexport const rootReducer = combineReducers({\r\n    calendarReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore} from \"redux\"\nimport {Provider} from 'react-redux';\nimport {rootReducer} from \"./store/rootReducer\";\n\nconst store = createStore(rootReducer)\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}